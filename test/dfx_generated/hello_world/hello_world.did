service: () -> {
    addProduct: (text, text) -> (variant {Fail:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; Unauthorized:text; PaymentCompleted:text; Exists:text});
    addShipment: (text, text, text) -> (variant {Fail:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; Unauthorized:text; PaymentCompleted:text; Exists:text});
    cancelShipment: (text) -> (variant {Fail:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; Unauthorized:text; PaymentCompleted:text; Exists:text});
    getProductCount: () -> (int32) query;
    getProductDetails: (text) -> (opt record {id:text; manufacturer:text; owner:text; name:text; description:text; timestamp:nat64}) query;
    getProducts: () -> (vec record {id:text; manufacturer:text; owner:text; name:text; description:text; timestamp:nat64}) query;
    getShipmentCount: () -> (int32) query;
    getShipmentDetails: (text) -> (opt record {id:text; to:text; status:text; owner:text; from:text; productId:text; timestamp:nat64}) query;
    getShipments: () -> (vec record {id:text; to:text; status:text; owner:text; from:text; productId:text; timestamp:nat64}) query;
    updateProduct: (text, text, text) -> (variant {Fail:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; Unauthorized:text; PaymentCompleted:text; Exists:text});
    updateShipmentStatus: (text, text) -> (variant {Fail:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; Unauthorized:text; PaymentCompleted:text; Exists:text});
}
